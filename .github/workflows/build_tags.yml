name: "build-tags"

on:
  push:
    branches-ignore:
      - "**"
    tags:
      - "v[1-9].[0-9]+.[0-9]+-nginx[1-9].[0-9]+.[0-9]+"

jobs:
  docker_buildx_debian:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    steps:
      - name: Run Docker on tmpfs
        uses: JonasAlfredsson/docker-on-tmpfs@v1.0.1
        with:
          tmpfs_size: 7
          swap_size: 9

      - name: Perform setup steps
        uses: JonasAlfredsson/checkout-qemu-buildx@v2
        with:
          should_login: ${{ github.event_name != 'pull_request' }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract version numbers from GitHub reference
        id: tagger
        run: bash .github/version_extractor.sh ${GITHUB_REF}

      - name: Build and push all Debian images
        uses: docker/build-push-action@v3.2.0
        with:
          context: ./src
          file: ./src/Dockerfile
          platforms: |
            linux/amd64
            linux/386
            linux/arm64
            linux/arm/v7
          pull: true
          no-cache: true
          push: true
          tags: |
            jonasal/nginx-certbot:${{ steps.tagger.outputs.APP_MAJOR }}
            jonasal/nginx-certbot:${{ steps.tagger.outputs.APP_MAJOR }}.${{ steps.tagger.outputs.APP_MINOR }}
            jonasal/nginx-certbot:${{ steps.tagger.outputs.APP_MAJOR }}.${{ steps.tagger.outputs.APP_MINOR }}.${{ steps.tagger.outputs.APP_PATCH }}
            jonasal/nginx-certbot:${{ steps.tagger.outputs.APP_MAJOR }}.${{ steps.tagger.outputs.APP_MINOR }}.${{ steps.tagger.outputs.APP_PATCH }}-nginx${{ steps.tagger.outputs.NGINX_VERSION }}

  docker_buildx_alpine:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    steps:
      - name: Run Docker on tmpfs
        uses: JonasAlfredsson/docker-on-tmpfs@v1.0.1
        with:
          tmpfs_size: 7
          swap_size: 9

      - name: Perform setup steps
        uses: JonasAlfredsson/checkout-qemu-buildx@v2
        with:
          should_login: ${{ github.event_name != 'pull_request' }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract version numbers from GitHub reference
        id: tagger
        run: bash .github/version_extractor.sh ${GITHUB_REF}

      - name: Build and push all Alpine images
        uses: docker/build-push-action@v3.2.0
        with:
          context: ./src
          file: ./src/Dockerfile-alpine
          platforms: |
            linux/amd64
            linux/arm64
          pull: true
          no-cache: true
          push: true
          tags: |
            jonasal/nginx-certbot:${{ steps.tagger.outputs.APP_MAJOR }}-alpine
            jonasal/nginx-certbot:${{ steps.tagger.outputs.APP_MAJOR }}.${{ steps.tagger.outputs.APP_MINOR }}-alpine
            jonasal/nginx-certbot:${{ steps.tagger.outputs.APP_MAJOR }}.${{ steps.tagger.outputs.APP_MINOR }}.${{ steps.tagger.outputs.APP_PATCH }}-alpine
            jonasal/nginx-certbot:${{ steps.tagger.outputs.APP_MAJOR }}.${{ steps.tagger.outputs.APP_MINOR }}.${{ steps.tagger.outputs.APP_PATCH }}-nginx${{ steps.tagger.outputs.NGINX_VERSION }}-alpine

  update_docker_hub_docs:
    needs: [docker_buildx_debian, docker_buildx_alpine]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3.1.0

      - name: Create Docker Hub documentation
        run: cat docs/dockerhub_tags.md > tmp.md && cat README.md >> tmp.md

      - name: Upload Docker Hub description
        uses: peter-evans/dockerhub-description@v3.1.2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: jonasal/nginx-certbot
          readme-filepath: ./tmp.md
